[{"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/App.tsx":"1","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/NavBar/index.tsx":"2","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Forms/LoginForm/index.tsx":"3","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Forms/SignUpForm/index.tsx":"4","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/BlogCard/index.tsx":"5","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/BlogList/index.tsx":"6","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/index.tsx":"7","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/config.tsx":"8","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/SearchBar/index.tsx":"9","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/FavoriteButton/index.tsx":"10","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/redux/actionTypes.tsx":"11","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/redux/actionCreators.tsx":"12","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/redux/rootReducer.tsx":"13","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/CommentList/index.tsx":"14","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/CommentCard/index.tsx":"15","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/helpers.tsx":"16","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Forms/CommentForm/index.tsx":"17","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/FavoritesList/index.tsx":"18","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/reportWebVitals.ts":"19","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/SortSelection/index.tsx":"20","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Forms/BlogForm/index.tsx":"21","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/EditFormModal/index.tsx":"22","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/DeleteModal/index.tsx":"23","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/UserCard/index.tsx":"24","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/UserList/index.tsx":"25","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/RoutedPages/Register/index.tsx":"26","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/RoutedPages/PostDetails/index.tsx":"27","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/RoutedPages/ComposePage/index.tsx":"28","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/CommentReplyAccord/index.tsx":"29","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Routes/index.tsx":"30","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/RoutedPages/Homepage/index.tsx":"31","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/RoutedPages/SearchResults/index.tsx":"32","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/RoutedPages/UserProfile/index.tsx":"33","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/RoutedPages/Login/index.tsx":"34","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/UserProfilePhoto/index.tsx":"35","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/UploadPhotoModal/index.tsx":"36"},{"size":1091,"mtime":1612910201328,"results":"37","hashOfConfig":"38"},{"size":2396,"mtime":1612909820780,"results":"39","hashOfConfig":"38"},{"size":1440,"mtime":1610496856262,"results":"40","hashOfConfig":"38"},{"size":3805,"mtime":1610496968631,"results":"41","hashOfConfig":"38"},{"size":2092,"mtime":1613538770297,"results":"42","hashOfConfig":"38"},{"size":786,"mtime":1610429011726,"results":"43","hashOfConfig":"38"},{"size":1434,"mtime":1610497142362,"results":"44","hashOfConfig":"38"},{"size":169,"mtime":1613002532858,"results":"45","hashOfConfig":"38"},{"size":1528,"mtime":1612834292771,"results":"46","hashOfConfig":"38"},{"size":3327,"mtime":1612910201329,"results":"47","hashOfConfig":"38"},{"size":629,"mtime":1613013485655,"results":"48","hashOfConfig":"38"},{"size":6154,"mtime":1613014660364,"results":"49","hashOfConfig":"38"},{"size":3267,"mtime":1613014482049,"results":"50","hashOfConfig":"38"},{"size":1398,"mtime":1610422038486,"results":"51","hashOfConfig":"38"},{"size":3244,"mtime":1613018164660,"results":"52","hashOfConfig":"38"},{"size":1691,"mtime":1612910201333,"results":"53","hashOfConfig":"38"},{"size":1325,"mtime":1610423812245,"results":"54","hashOfConfig":"38"},{"size":794,"mtime":1610422952413,"results":"55","hashOfConfig":"38"},{"size":425,"mtime":1610058522094,"results":"56","hashOfConfig":"38"},{"size":2514,"mtime":1612834292772,"results":"57","hashOfConfig":"38"},{"size":2041,"mtime":1610425176737,"results":"58","hashOfConfig":"38"},{"size":979,"mtime":1612567719792,"results":"59","hashOfConfig":"38"},{"size":907,"mtime":1610491272929,"results":"60","hashOfConfig":"38"},{"size":864,"mtime":1610428813041,"results":"61","hashOfConfig":"38"},{"size":791,"mtime":1610428885433,"results":"62","hashOfConfig":"38"},{"size":2787,"mtime":1612910201332,"results":"63","hashOfConfig":"38"},{"size":8046,"mtime":1613016555200,"results":"64","hashOfConfig":"38"},{"size":1036,"mtime":1612910201330,"results":"65","hashOfConfig":"38"},{"size":1717,"mtime":1610448379609,"results":"66","hashOfConfig":"38"},{"size":1407,"mtime":1610450081846,"results":"67","hashOfConfig":"38"},{"size":2126,"mtime":1612834292766,"results":"68","hashOfConfig":"38"},{"size":1956,"mtime":1610428482302,"results":"69","hashOfConfig":"38"},{"size":3968,"mtime":1613018216471,"results":"70","hashOfConfig":"38"},{"size":2236,"mtime":1612910201331,"results":"71","hashOfConfig":"38"},{"size":640,"mtime":1613018936502,"results":"72","hashOfConfig":"38"},{"size":1970,"mtime":1613016297888,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"dka9vg",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"93"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"93"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/App.tsx",["157"],"import React, { useEffect } from 'react';\nimport './App.css';\nimport './animations.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './Routes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useDispatch } from 'react-redux';\nimport { getUserFavoritesFromAPI, getUserInfoFromAPI } from './redux/actionCreators';\nimport NavBar from './NavBar';\nimport { CustomReduxState } from './custom';\nimport { getCookie } from './helpers';\n\nfunction App() {\n  const userId = ((st: CustomReduxState) => st.user.id);\n  const dispatch = useDispatch();\n\n  useEffect(function handleGetUser() {\n    const token = getCookie(\"token\");\n    // if the user has not signed out from previous session and\n    // still has a token, retrieve the user's information by\n    // id upon App mount.\n    if (token && !userId) {\n      dispatch(getUserInfoFromAPI());\n      dispatch(getUserFavoritesFromAPI(userId));\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <NavBar />\n        <Routes />\n      </BrowserRouter>\n    </div >\n  );\n}\n\nexport default App;\n",["158","159"],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/NavBar/index.tsx",[],["160","161"],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Forms/LoginForm/index.tsx",[],["162","163"],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Forms/SignUpForm/index.tsx",[],["164","165"],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/BlogCard/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/BlogList/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/index.tsx",[],["166","167"],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/config.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/SearchBar/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/FavoriteButton/index.tsx",["168"],"import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart as farHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./FavoriteButton.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addFavoriteToAPI, deleteFavoriteFromAPI } from \"../redux/actionCreators\";\nimport { CustomReduxState, Post } from \"../custom\";\nimport { getCookie, isFavorited } from \"../helpers\";\n\ninterface IProp {\n  post: Post\n}\n\n/**\n * `FavoriteButton` renders a Heart icon and displays the number of favorites for a post.\n *  *Only logged in users may use the button*\n * `FavoriteButton` handles the logic for dispatching `addFavoriteToAPI` and `deleteFavoriteFromAPI`\n */\nfunction FavoriteButton({ post }: IProp) {\n  const dispatch = useDispatch();\n  const favorites = useSelector((st: CustomReduxState) => st.favorites);\n  const [favorited, setFavorited] = useState<boolean>(false);\n  const posts = useSelector((st: CustomReduxState) => st.posts);\n\n  //**FIXED**: Fix issue where the setFavorited doesn't change when a user clicks \"unfavorite\"\n  // on the same post, but different card. \n  // ex. User clicks the FavoriteButton to unfavorite their published post: `post id 1` from the `Favorites List`.\n  // The `post id 1` card in their published post list is still solid.\n\n  // If the post is found in the redux store's `favorites` state, \n  // set favorited to true.\n  useEffect(function handleFavoriteStatus() {\n    if (isFavorited(post.id, favorites)) {\n      setFavorited(true);\n    } else {\n      // POST-SUBMISSION UPDATE: Add an else statement to setFavorited to false.\n      setFavorited(false);\n    }\n    // POST-SUBMISSION UPDATE: Add `favorites` to the dependency array to rerender when favorites changes.\n  }, [favorites]);\n\n  /**\n   * Dispatches action creators depending on `type` input.\n   * (Only allows logged in users to invoke dispatch)\n   */\n  const handleFavorites = async (type: string) => {\n    if (!getCookie(\"token\")) {\n      alert(\"Must be signed in to favorite.\");\n    } else {\n      let currFavCount = parseInt(post.favorite_count);\n      switch (type) {\n        case \"ADD\":\n          setFavorited(true);\n          dispatch(addFavoriteToAPI(post));\n          // if the redux store's `posts` state is empty, \n          //    the component need to manually update the favCount to display.\n          if (posts.length === 0) {\n            post.favorite_count = (currFavCount + 1).toString();\n          }\n          break;\n        case \"DELETE\":\n          setFavorited(false);\n          dispatch(deleteFavoriteFromAPI(post.id));\n          if (posts.length === 0) {\n            post.favorite_count = (currFavCount - 1).toString();\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  return (\n    <div className=\"FavoriteButton d-flex align-items-center\">\n      { favorited ?\n        <FontAwesomeIcon className=\"FavoriteButton-btn\" icon={faHeart} size=\"1x\" onClick={() => handleFavorites(\"DELETE\")} />\n        :\n        <FontAwesomeIcon className=\"FavoriteButton-btn\" icon={farHeart} size=\"1x\" onClick={() => handleFavorites(\"ADD\")} />\n      }\n      <span>{post.favorite_count}</span>\n    </div>\n  );\n};\n\nexport default FavoriteButton;","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/redux/actionTypes.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/redux/actionCreators.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/redux/rootReducer.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/CommentList/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/CommentCard/index.tsx",["169"],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/helpers.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Forms/CommentForm/index.tsx",[],["170","171"],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/FavoritesList/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/reportWebVitals.ts",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/SortSelection/index.tsx",["172"],"import React, { useEffect, useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Post } from \"../custom\";\n\ninterface IProp {\n  posts: Array<Post>,\n  handlePostSort: Function,\n  currentSort: string\n}\n\n/**\n * `SortSelection` renders a dropdown that enables a user to sort\n * posts by \"most recent\", \"most favorited\", and \"least favorited\".\n */\nfunction SortSelection({ posts, handlePostSort, currentSort }: IProp) {\n  const DEFAULT_SORT_SELECT = \"most recent\";\n  const [ sortType, setSortType ] = useState<string>(DEFAULT_SORT_SELECT);\n\n  // useEffect for ensuring the current sort type will be the recently selected sort type\n  // - ensures it stays the same sort type when a user causes a re-render of Homepage \n  //   (caused by the change in global state of posts from favoriting/unfavoriting)\n  useEffect(() => {\n    handleSelection(currentSort);\n  }, [posts]);\n\n  const handleSelection = (eventKey: string | null) => {\n    let sortedPosts;\n    switch (eventKey) {\n      case \"mostFavorite\":\n        setSortType(\"most favorited\");\n        sortedPosts = posts.slice().sort((a, b) => parseInt(b.favorite_count) - parseInt(a.favorite_count));\n        handlePostSort(sortedPosts, eventKey);\n        break;\n      case \"leastFavorite\":\n        setSortType(\"least favorited\");\n        sortedPosts = posts.slice().sort((a, b) => parseInt(a.favorite_count) - parseInt(b.favorite_count));\n        handlePostSort(sortedPosts, eventKey);\n        break;\n      case \"mostRecent\":\n        setSortType(DEFAULT_SORT_SELECT);\n        sortedPosts = posts.slice().sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n        handlePostSort(sortedPosts, eventKey);\n        break;\n      default:\n        setSortType(DEFAULT_SORT_SELECT);\n        handlePostSort(posts, eventKey);\n        break;\n    }\n  }\n\n  return (\n    <div className=\"SortSelection d-flex align-items-center\">\n      View by:\n      <Dropdown className=\"ml-2\">\n        <Dropdown.Toggle variant=\"primary\" id=\"filter-dropdown\">\n          {sortType}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item eventKey=\"mostRecent\" onSelect={handleSelection} >most recent</Dropdown.Item>\n          <Dropdown.Item eventKey=\"mostFavorite\" onSelect={handleSelection} >most favorited</Dropdown.Item>\n          <Dropdown.Item eventKey=\"leastFavorite\" onSelect={handleSelection} >least favorited</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default SortSelection;","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Forms/BlogForm/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/EditFormModal/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/DeleteModal/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/UserCard/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/UserList/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/RoutedPages/Register/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/RoutedPages/PostDetails/index.tsx",["173"],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/RoutedPages/ComposePage/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/CommentReplyAccord/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Routes/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/RoutedPages/Homepage/index.tsx",["174"],"import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport BlogList from \"../../BlogList\";\nimport { CustomReduxState, Post } from \"../../custom\";\nimport { getPostsFromAPI } from \"../../redux/actionCreators\";\nimport SortSelection from \"../../SortSelection\";\n\n/**\n * `Homepage` renders `BlogList` and `SortSelection` components.\n * If posts do not exist in current redux store, it dispatches an action to\n * `getPostsFromAPI`.\n */\nfunction Homepage() {\n  const postsList = useSelector((st: CustomReduxState) => st.posts.sort((a: Post, b: Post) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime()));\n  const dispatch = useDispatch();\n  const [posts, setPosts] = useState<Array<Post>>([]);\n  const [sortType, setSortType] = useState(\"mostRecent\")\n\n  useEffect(function handleLoadPosts() {\n    if (postsList.length === 0) {\n      dispatch(getPostsFromAPI());\n    } else {\n      setPosts(postsList);\n    }\n    /*POST-SUBMIT BUG FIXED: Changing the favorites count on a post will reset the order to \"most recent\" \n        WHY: because the dependency array had postsList, which causes `setPosts(postsList)` to run, resetting the order\n              to \"most recent\". \n        FIX: Pass the current sort `sortType` to the sortSelection, which will re-sort when posts changes. */\n  }, []);\n\n  // invoked in `SortSelection` component when a user chooses a sort type in the dropdown.\n  const handlePostSort = (sortedPosts: Array<Post>, newSortType: string) => {\n    setPosts(sortedPosts);\n    setSortType(newSortType);\n  }\n\n  return (\n    <div className=\"Homepage\">\n      <Container>\n        <Row className=\"mt-4\">\n          <Col md={12} className=\"d-flex align-items-center justify-content-between\">\n            <h1 className=\"text-left\">Bloggies newsfeed</h1>\n            <SortSelection handlePostSort={handlePostSort} posts={postsList} currentSort={sortType}/>\n          </Col>\n        </Row>\n        <BlogList key={sortType} posts={posts}/>\n      </Container>\n    </div>\n  );\n};\n\nexport default Homepage;","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/RoutedPages/SearchResults/index.tsx",["175"],"import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport BlogList from \"../../BlogList\";\nimport { CustomReduxState } from \"../../custom\";\nimport { getSearchResultsFromAPI } from \"../../redux/actionCreators\";\nimport UserList from \"../../UserList\";\n\n/**\n * `SearchResults` renders the page for the search results from a searched term.\n * Displays the `BlogList` and `UserList` and passes the postsResults and userResults to \n * the child components to show the Post and User objects.\n */\nfunction SearchResults() {\n  const postsResults = useSelector((st: CustomReduxState) => st.searchResults.posts);\n  const usersResults = useSelector((st: CustomReduxState) => st.searchResults.users);\n  const [isSearched, setIsSearched] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  // get the query value for \"term\" to display or \n  // search backend if user has altered url instead of using search bar.\n  const search = window.location.search;\n  const params = new URLSearchParams(search);\n  const searchTerm = params.get(\"term\");\n  \n  useEffect(function handleSearch() {\n    // if the user alters the URL, the component will dispatch\n    // `getSearchResultsFromAPI` with the searchTerm retrieved\n    // from the URL query params.\n    if (!isSearched) {\n      if (searchTerm) {\n        dispatch(getSearchResultsFromAPI(searchTerm));\n      }\n      setIsSearched(true);\n    }\n  }, []);\n\n  return (\n    <Container className=\"SearchResults text-left\">\n      <h1 className=\"mt-3\">Search results for '{searchTerm}'</h1>\n      <Row className=\"mt-5\">\n        <Col md={8}>\n          <h3>Posts results</h3>\n          <BlogList posts={postsResults} />\n        </Col>\n        <Col md={4}>\n          <h3>Users results</h3>\n          <UserList users={usersResults} />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default SearchResults;","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/RoutedPages/UserProfile/index.tsx",["176"],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/RoutedPages/Login/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/UserProfilePhoto/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/UploadPhotoModal/index.tsx",[],{"ruleId":"177","severity":1,"message":"178","line":26,"column":6,"nodeType":"179","endLine":26,"endColumn":8,"suggestions":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"181","replacedBy":"185"},{"ruleId":"183","replacedBy":"186"},{"ruleId":"181","replacedBy":"187"},{"ruleId":"183","replacedBy":"188"},{"ruleId":"181","replacedBy":"189"},{"ruleId":"183","replacedBy":"190"},{"ruleId":"181","replacedBy":"191"},{"ruleId":"183","replacedBy":"192"},{"ruleId":"177","severity":1,"message":"193","line":41,"column":6,"nodeType":"179","endLine":41,"endColumn":17,"suggestions":"194"},{"ruleId":"177","severity":1,"message":"195","line":30,"column":6,"nodeType":"179","endLine":30,"endColumn":8,"suggestions":"196"},{"ruleId":"181","replacedBy":"197"},{"ruleId":"183","replacedBy":"198"},{"ruleId":"177","severity":1,"message":"199","line":24,"column":6,"nodeType":"179","endLine":24,"endColumn":13,"suggestions":"200"},{"ruleId":"177","severity":1,"message":"201","line":78,"column":6,"nodeType":"179","endLine":78,"endColumn":14,"suggestions":"202"},{"ruleId":"177","severity":1,"message":"203","line":30,"column":6,"nodeType":"179","endLine":30,"endColumn":8,"suggestions":"204"},{"ruleId":"177","severity":1,"message":"205","line":36,"column":6,"nodeType":"179","endLine":36,"endColumn":8,"suggestions":"206"},{"ruleId":"177","severity":1,"message":"207","line":73,"column":6,"nodeType":"179","endLine":73,"endColumn":14,"suggestions":"208"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["209"],"no-native-reassign",["210"],"no-negated-in-lhs",["211"],["210"],["211"],["210"],["211"],["210"],["211"],["210"],["211"],"React Hook useEffect has a missing dependency: 'post.id'. Either include it or remove the dependency array.",["212"],"React Hook useEffect has a missing dependency: 'comment.reply_count'. Either include it or remove the dependency array. If 'setReplyCount' needs the current value of 'comment.reply_count', you can also switch to useReducer instead of useState and read 'comment.reply_count' in the reducer.",["213"],["210"],["211"],"React Hook useEffect has missing dependencies: 'currentSort' and 'handleSelection'. Either include them or remove the dependency array.",["214"],"React Hook useEffect has missing dependencies: 'currUser.id' and 'posts'. Either include them or remove the dependency array.",["215"],"React Hook useEffect has missing dependencies: 'dispatch' and 'postsList'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has missing dependencies: 'dispatch', 'isSearched', and 'searchTerm'. Either include them or remove the dependency array.",["217"],"React Hook useEffect has missing dependencies: 'currUser.id' and 'currUser.photo_url'. Either include them or remove the dependency array.",["218"],{"desc":"219","fix":"220"},"no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [dispatch]",{"range":"235","text":"236"},"Update the dependencies array to be: [favorites, post.id]",{"range":"237","text":"238"},"Update the dependencies array to be: [comment.reply_count]",{"range":"239","text":"240"},"Update the dependencies array to be: [currentSort, handleSelection, posts]",{"range":"241","text":"242"},"Update the dependencies array to be: [currUser.id, postId, posts]",{"range":"243","text":"244"},"Update the dependencies array to be: [dispatch, postsList]",{"range":"245","text":"246"},"Update the dependencies array to be: [dispatch, isSearched, searchTerm]",{"range":"247","text":"248"},"Update the dependencies array to be: [currUser.id, currUser.photo_url, userId]",{"range":"249","text":"250"},[925,927],"[dispatch]",[1862,1873],"[favorites, post.id]",[1164,1166],"[comment.reply_count]",[879,886],"[currentSort, handleSelection, posts]",[3315,3323],"[currUser.id, postId, posts]",[1405,1407],"[dispatch, postsList]",[1498,1500],"[dispatch, isSearched, searchTerm]",[2842,2850],"[currUser.id, currUser.photo_url, userId]"]