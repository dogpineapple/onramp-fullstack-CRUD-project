[{"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/App.tsx":"1","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/PublicRoutes/index.tsx":"2","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/NavBar/index.tsx":"3","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Forms/LoginForm/index.tsx":"4","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/PublicPages/Login/index.tsx":"5","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Forms/SignUpForm/index.tsx":"6","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/BlogCard/index.tsx":"7","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/BlogList/index.tsx":"8","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/index.tsx":"9","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/PublicPages/Register/index.tsx":"10","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/PublicPages/Homepage/index.tsx":"11","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/config.tsx":"12","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/PublicPages/PostDetails/index.tsx":"13","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/SearchBar/index.tsx":"14","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/FavoriteButton/index.tsx":"15","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/redux/actionTypes.tsx":"16","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/redux/actionCreators.tsx":"17","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/redux/rootReducer.tsx":"18","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/CommentList/index.tsx":"19","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/CommentCard/index.tsx":"20","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/CommentReplyCard/index.tsx":"21","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/helpers.tsx":"22","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Forms/CommentForm/index.tsx":"23","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/PublicPages/UserProfile/index.tsx":"24","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/FavoritesList/index.tsx":"25"},{"size":877,"mtime":1610183842259,"results":"26","hashOfConfig":"27"},{"size":1231,"mtime":1610183834846,"results":"28","hashOfConfig":"27"},{"size":1712,"mtime":1610182185654,"results":"29","hashOfConfig":"27"},{"size":1363,"mtime":1610163032305,"results":"30","hashOfConfig":"27"},{"size":1910,"mtime":1610183865998,"results":"31","hashOfConfig":"27"},{"size":3502,"mtime":1610156794634,"results":"32","hashOfConfig":"27"},{"size":1243,"mtime":1610177672568,"results":"33","hashOfConfig":"27"},{"size":641,"mtime":1610183869310,"results":"34","hashOfConfig":"27"},{"size":1419,"mtime":1610162545536,"results":"35","hashOfConfig":"27"},{"size":2323,"mtime":1610157109170,"results":"36","hashOfConfig":"27"},{"size":790,"mtime":1610174974002,"results":"37","hashOfConfig":"27"},{"size":48,"mtime":1610089711143,"results":"38","hashOfConfig":"27"},{"size":1867,"mtime":1610182597326,"results":"39","hashOfConfig":"27"},{"size":643,"mtime":1610180168989,"results":"40","hashOfConfig":"27"},{"size":1585,"mtime":1610174172185,"results":"41","hashOfConfig":"27"},{"size":335,"mtime":1610163515139,"results":"42","hashOfConfig":"27"},{"size":2536,"mtime":1610173937816,"results":"43","hashOfConfig":"27"},{"size":1003,"mtime":1610173893747,"results":"44","hashOfConfig":"27"},{"size":733,"mtime":1610179797848,"results":"45","hashOfConfig":"27"},{"size":1261,"mtime":1610176321167,"results":"46","hashOfConfig":"27"},{"size":1458,"mtime":1610169657080,"results":"47","hashOfConfig":"27"},{"size":519,"mtime":1610177785397,"results":"48","hashOfConfig":"27"},{"size":1186,"mtime":1610176764374,"results":"49","hashOfConfig":"27"},{"size":1450,"mtime":1610182767396,"results":"50","hashOfConfig":"27"},{"size":724,"mtime":1610179525851,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"dka9vg",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"67"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/App.tsx",["110"],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/PublicRoutes/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/NavBar/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Forms/LoginForm/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/PublicPages/Login/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Forms/SignUpForm/index.tsx",[],["111","112"],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/BlogCard/index.tsx",[],["113","114"],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/BlogList/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/index.tsx",[],["115","116"],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/PublicPages/Register/index.tsx",[],["117","118"],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/PublicPages/Homepage/index.tsx",["119"],"import React, { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport BlogList from \"../../BlogList\";\nimport { getPostsFromAPI } from \"../../redux/actionCreators\";\n\nfunction Homepage() {\n  const postsList = useSelector((st: any) => st.posts);\n  const dispatch = useDispatch();\n\n  const [posts, setPosts] = useState([]);\n\n  useEffect(function handleLoadPosts() {\n    if (postsList.length === 0) {\n      dispatch(getPostsFromAPI());\n    }\n    setPosts(postsList);\n  }, [postsList]);\n\n  return (\n    <div className=\"Homepage\">\n      <Container>\n        <h1 className=\"mt-4 text-left\">recent bloggies</h1>\n        <BlogList posts={posts} />\n      </Container>\n    </div>\n  );\n};\n\nexport default Homepage;","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/config.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/PublicPages/PostDetails/index.tsx",["120"],"import React, { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { useParams } from \"react-router\";\nimport moment from \"moment\";\nimport CommentList from \"../../CommentList\";\nimport { BASE_URL } from \"../../config\";\nimport FavoriteButton from \"../../FavoriteButton\";\nimport \"./PostDetails.css\";\nimport { Post, Comment } from \"../../custom\";\n\n// if post id is in user's favorite list...\nfunction PostDetails() {\n  const { postId } = useParams<{ postId: string, postTitle: string }>();\n  const [post, setPost] = useState<Post>();\n  const [comments, setComments] = useState<Array<Comment>>([]);\n\n  useEffect(function handleGetPost() {\n    async function getPost() {\n      const postRes = await fetch(`${BASE_URL}/posts/${postId}`);\n      const postData = await postRes.json();\n      setPost(postData.post);\n      const commentsRes = await fetch(`${BASE_URL}/comments/${postId}`);\n      const commentsData = await commentsRes.json();\n      setComments(commentsData.comments);\n    }\n    getPost();\n  }, []);\n\n  return (\n    <div className=\"PostDetails mt-5\">\n      { post ?\n          <Container >\n            <div className=\"PostDetails-post text-left\">\n              <div className=\"d-flex align-items-center\">\n                <h2 className=\"PostDetails-title\">{post.title} </h2>\n                <FavoriteButton post={post} />\n              </div>\n              <div className=\"text-muted\">{post.description}</div>\n              <div className=\"text-muted\">Posted by <span className=\"App-author\">{post.author_name}</span> {moment(post.created_at).fromNow()}</div>\n              <div className=\"PostDetails-body\">{post.body}</div>\n            </div>\n            <CommentList comments={comments} postId={post.id}/>\n          </Container>\n        : <div>loading this page...</div>\n      }\n    </div>\n  );\n};\n\nexport default PostDetails;","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/SearchBar/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/FavoriteButton/index.tsx",["121"],"import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart as farHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./FavoriteButton.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addFavoriteToAPI, deleteFavoriteFromAPI } from \"../redux/actionCreators\";\nimport { Post } from \"../custom\";\nimport { isFavorited } from \"../helpers\";\n\ninterface IProp {\n  post: Post\n}\n\nfunction FavoriteButton({ post }: IProp) {\n  const dispatch = useDispatch();\n  const favorites = useSelector((st: any) => st.favorites);\n  const [ favorited, setFavorited ] = useState<boolean>(false);\n\n  useEffect(function handleFavoriteStatus() {\n    if (isFavorited(post.id, favorites)) {\n      setFavorited(true);\n    }\n  }, []);\n\n  const handleFavorites = async (type: string) => {\n    switch (type) {\n      case \"ADD\":\n        setFavorited(true);\n        dispatch(addFavoriteToAPI(post));\n        break;\n      case \"DELETE\":\n        setFavorited(false);\n        dispatch(deleteFavoriteFromAPI(post.id));\n        break;\n      default:\n        break;\n    }\n  }\n  return (\n    <div className=\"FavoriteButton\">\n      { favorited ?\n        <FontAwesomeIcon className=\"FavoriteButton-btn\" icon={faHeart} size=\"1x\" onClick={() => handleFavorites(\"DELETE\")} />\n        :\n        <FontAwesomeIcon className=\"FavoriteButton-btn\" icon={farHeart} size=\"1x\" onClick={() => handleFavorites(\"ADD\")} />\n      }\n    </div>\n  );\n};\n\nexport default FavoriteButton;","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/redux/actionTypes.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/redux/actionCreators.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/redux/rootReducer.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/CommentList/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/CommentCard/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/CommentReplyCard/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/helpers.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/Forms/CommentForm/index.tsx",[],"/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/PublicPages/UserProfile/index.tsx",["122"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { BASE_URL } from \"../../config\";\nimport { Post } from \"../../custom\";\nimport FavoritesList from \"../../FavoritesList\";\nimport \"./UserProfile.css\";\n\nfunction UserProfile() {\n  const currUserId = useSelector((st: any) => st.user.id); \n  const { userId, displayName } = useParams<{ userId: string, displayName: string }>();\n  const [ isCurrUserProfile , setIsCurrUserProfile ] = useState<boolean>(false);\n  const currUserFavs = useSelector((st: any) => st.favorites);\n  const [ userFavs, setUserFavs ] = useState<Array<Post>>([]);\n\n  useEffect(function checkProfileOwner() {\n    async function getAltUserFavorites() {\n      const res = await fetch(`${BASE_URL}/favorites/${userId}`);\n      const resData = await res.json();\n      setUserFavs(resData.posts);\n    }\n\n    // if profile belongs to the current user, use redux data.\n    if (parseInt(userId) === currUserId) {\n      setIsCurrUserProfile(true);\n    } else { \n      // if not current user's profile, fetch the data from backend.\n      getAltUserFavorites();\n    }\n  }, []);\n\n  return (\n    <div className=\"UserProfile\">\n      <h1 className=\"mt-4\">{displayName.replaceAll(\"-\", \" \")}'s profile</h1>\n      <FavoritesList displayName={displayName} favorites={isCurrUserProfile ? currUserFavs : userFavs}/>\n    </div>\n  );\n};\n\nexport default UserProfile;","/Users/dogsarecute/Desktop/Onramp/onramp-fullstack-CRUD-project-main/bloggies_frontend/src/FavoritesList/index.tsx",[],{"ruleId":"123","severity":1,"message":"124","line":21,"column":6,"nodeType":"125","endLine":21,"endColumn":8,"suggestions":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"129","replacedBy":"132"},{"ruleId":"127","replacedBy":"133"},{"ruleId":"129","replacedBy":"134"},{"ruleId":"127","replacedBy":"135"},{"ruleId":"129","replacedBy":"136"},{"ruleId":"123","severity":1,"message":"124","line":18,"column":6,"nodeType":"125","endLine":18,"endColumn":17,"suggestions":"137"},{"ruleId":"123","severity":1,"message":"138","line":27,"column":6,"nodeType":"125","endLine":27,"endColumn":8,"suggestions":"139"},{"ruleId":"123","severity":1,"message":"140","line":24,"column":6,"nodeType":"125","endLine":24,"endColumn":8,"suggestions":"141"},{"ruleId":"123","severity":1,"message":"142","line":30,"column":6,"nodeType":"125","endLine":30,"endColumn":8,"suggestions":"143"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["144"],"no-native-reassign",["145"],"no-negated-in-lhs",["146"],["145"],["146"],["145"],["146"],["145"],["146"],["147"],"React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.",["148"],"React Hook useEffect has missing dependencies: 'favorites' and 'post.id'. Either include them or remove the dependency array.",["149"],"React Hook useEffect has missing dependencies: 'currUserId' and 'userId'. Either include them or remove the dependency array.",["150"],{"desc":"151","fix":"152"},"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [dispatch]",{"range":"161","text":"162"},"Update the dependencies array to be: [dispatch, postsList]",{"range":"163","text":"164"},"Update the dependencies array to be: [postId]",{"range":"165","text":"166"},"Update the dependencies array to be: [favorites, post.id]",{"range":"167","text":"168"},"Update the dependencies array to be: [currUserId, userId]",{"range":"169","text":"170"},[705,707],"[dispatch]",[557,568],"[dispatch, postsList]",[1036,1038],"[postId]",[863,865],"[favorites, post.id]",[1170,1172],"[currUserId, userId]"]