[{"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/index.tsx":"1","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/reportWebVitals.ts":"2","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/App.tsx":"3","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/redux/rootReducer.tsx":"4","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/redux/actionCreators.tsx":"5","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/helpers.tsx":"6","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/redux/actionTypes.tsx":"7","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/NavBar/index.tsx":"8","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/Routes/index.tsx":"9","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/config.tsx":"10","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/SearchBar/index.tsx":"11","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/Register/index.tsx":"12","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/ComposePage/index.tsx":"13","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/UserProfile/index.tsx":"14","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/Login/index.tsx":"15","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/SearchResults/index.tsx":"16","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/PostDetails/index.tsx":"17","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/EditFormModal/index.tsx":"18","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/DeleteModal/index.tsx":"19","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/FavoriteButton/index.tsx":"20","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/UserList/index.tsx":"21","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/CommentList/index.tsx":"22","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/BlogList/index.tsx":"23","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/FavoritesList/index.tsx":"24","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/Forms/SignUpForm/index.tsx":"25","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/Forms/LoginForm/index.tsx":"26","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/Forms/BlogForm/index.tsx":"27","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/SortSelection/index.tsx":"28","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/UserCard/index.tsx":"29","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/Forms/CommentForm/index.tsx":"30","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/CommentCard/index.tsx":"31","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/BlogCard/index.tsx":"32","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/CommentReplyAccord/index.tsx":"33","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/PaymentPage/index.tsx":"34","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/BlogPage/index.tsx":"35","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/PaymentSuccessPage/index.tsx":"36","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/RegisterStatusPage/index.tsx":"37","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/PaymentCancelPage/index.tsx":"38","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/UserSettingsPage/index.tsx":"39"},{"size":1434,"mtime":1615819155659,"results":"40","hashOfConfig":"41"},{"size":425,"mtime":1615819155661,"results":"42","hashOfConfig":"41"},{"size":1263,"mtime":1615819155645,"results":"43","hashOfConfig":"41"},{"size":3331,"mtime":1615928217788,"results":"44","hashOfConfig":"41"},{"size":6135,"mtime":1615928217788,"results":"45","hashOfConfig":"41"},{"size":1691,"mtime":1615819155659,"results":"46","hashOfConfig":"41"},{"size":623,"mtime":1615928217788,"results":"47","hashOfConfig":"41"},{"size":2386,"mtime":1615928217784,"results":"48","hashOfConfig":"41"},{"size":2441,"mtime":1615928217786,"results":"49","hashOfConfig":"41"},{"size":48,"mtime":1615928217787,"results":"50","hashOfConfig":"41"},{"size":1528,"mtime":1615819155656,"results":"51","hashOfConfig":"41"},{"size":2787,"mtime":1615819155653,"results":"52","hashOfConfig":"41"},{"size":1036,"mtime":1615819155652,"results":"53","hashOfConfig":"41"},{"size":2799,"mtime":1615928217786,"results":"54","hashOfConfig":"41"},{"size":2236,"mtime":1615819155652,"results":"55","hashOfConfig":"41"},{"size":1956,"mtime":1615819155653,"results":"56","hashOfConfig":"41"},{"size":7986,"mtime":1615928217786,"results":"57","hashOfConfig":"41"},{"size":979,"mtime":1615819155649,"results":"58","hashOfConfig":"41"},{"size":907,"mtime":1615819155648,"results":"59","hashOfConfig":"41"},{"size":3327,"mtime":1615819155649,"results":"60","hashOfConfig":"41"},{"size":791,"mtime":1615819155658,"results":"61","hashOfConfig":"41"},{"size":1398,"mtime":1615819155647,"results":"62","hashOfConfig":"41"},{"size":786,"mtime":1615819155646,"results":"63","hashOfConfig":"41"},{"size":794,"mtime":1615819155649,"results":"64","hashOfConfig":"41"},{"size":3805,"mtime":1615819155651,"results":"65","hashOfConfig":"41"},{"size":1440,"mtime":1615819155650,"results":"66","hashOfConfig":"41"},{"size":2041,"mtime":1615819155650,"results":"67","hashOfConfig":"41"},{"size":2514,"mtime":1615819155656,"results":"68","hashOfConfig":"41"},{"size":854,"mtime":1615928217787,"results":"69","hashOfConfig":"41"},{"size":1325,"mtime":1615819155650,"results":"70","hashOfConfig":"41"},{"size":3034,"mtime":1615928217784,"results":"71","hashOfConfig":"41"},{"size":1899,"mtime":1615928217783,"results":"72","hashOfConfig":"41"},{"size":1717,"mtime":1615819155647,"results":"73","hashOfConfig":"41"},{"size":233,"mtime":1615928217785,"results":"74","hashOfConfig":"41"},{"size":2126,"mtime":1615928217793,"results":"75","hashOfConfig":"41"},{"size":210,"mtime":1615928217785,"results":"76","hashOfConfig":"41"},{"size":424,"mtime":1615928217786,"results":"77","hashOfConfig":"41"},{"size":215,"mtime":1615928217785,"results":"78","hashOfConfig":"41"},{"size":521,"mtime":1615928217786,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1reyr7f",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/index.tsx",[],["163","164"],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/reportWebVitals.ts",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/App.tsx",["165"],"import React, { useEffect } from 'react';\nimport './App.css';\nimport './animations.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './Routes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserFavoritesFromAPI, getUserInfoFromAPI } from './redux/actionCreators';\nimport NavBar from './NavBar';\nimport { CustomReduxState } from './custom';\nimport { getCookie } from './helpers';\n\nfunction App() {\n  const userId = useSelector((st: CustomReduxState) => st.user.id);\n  const serverErr = useSelector((st: CustomReduxState) => st.serverErr);\n  const dispatch = useDispatch();\n\n  useEffect(function handleGetUser() {\n    const token = getCookie(\"token\");\n    // if the user has not signed out from previous session and\n    // still has a token, retrieve the user's information by\n    // id upon App mount.\n    if (token && !userId) {\n      dispatch(getUserInfoFromAPI());\n      dispatch(getUserFavoritesFromAPI(userId));\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        {serverErr && <div className=\"App-server-error\">{serverErr}</div>}\n        <NavBar />\n        <Routes />\n      </BrowserRouter>\n    </div >\n  );\n}\n\nexport default App;\n","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/redux/rootReducer.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/redux/actionCreators.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/helpers.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/redux/actionTypes.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/NavBar/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/Routes/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/config.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/SearchBar/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/Register/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/ComposePage/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/UserProfile/index.tsx",["166"],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/Login/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/SearchResults/index.tsx",["167"],"import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport BlogList from \"../../BlogList\";\nimport { CustomReduxState } from \"../../custom\";\nimport { getSearchResultsFromAPI } from \"../../redux/actionCreators\";\nimport UserList from \"../../UserList\";\n\n/**\n * `SearchResults` renders the page for the search results from a searched term.\n * Displays the `BlogList` and `UserList` and passes the postsResults and userResults to \n * the child components to show the Post and User objects.\n */\nfunction SearchResults() {\n  const postsResults = useSelector((st: CustomReduxState) => st.searchResults.posts);\n  const usersResults = useSelector((st: CustomReduxState) => st.searchResults.users);\n  const [isSearched, setIsSearched] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  // get the query value for \"term\" to display or \n  // search backend if user has altered url instead of using search bar.\n  const search = window.location.search;\n  const params = new URLSearchParams(search);\n  const searchTerm = params.get(\"term\");\n  \n  useEffect(function handleSearch() {\n    // if the user alters the URL, the component will dispatch\n    // `getSearchResultsFromAPI` with the searchTerm retrieved\n    // from the URL query params.\n    if (!isSearched) {\n      if (searchTerm) {\n        dispatch(getSearchResultsFromAPI(searchTerm));\n      }\n      setIsSearched(true);\n    }\n  }, []);\n\n  return (\n    <Container className=\"SearchResults text-left\">\n      <h1 className=\"mt-3\">Search results for '{searchTerm}'</h1>\n      <Row className=\"mt-5\">\n        <Col md={8}>\n          <h3>Posts results</h3>\n          <BlogList posts={postsResults} />\n        </Col>\n        <Col md={4}>\n          <h3>Users results</h3>\n          <UserList users={usersResults} />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default SearchResults;","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/PostDetails/index.tsx",["168"],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/EditFormModal/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/DeleteModal/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/FavoriteButton/index.tsx",["169"],"import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart as farHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./FavoriteButton.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addFavoriteToAPI, deleteFavoriteFromAPI } from \"../redux/actionCreators\";\nimport { CustomReduxState, Post } from \"../custom\";\nimport { getCookie, isFavorited } from \"../helpers\";\n\ninterface IProp {\n  post: Post\n}\n\n/**\n * `FavoriteButton` renders a Heart icon and displays the number of favorites for a post.\n *  *Only logged in users may use the button*\n * `FavoriteButton` handles the logic for dispatching `addFavoriteToAPI` and `deleteFavoriteFromAPI`\n */\nfunction FavoriteButton({ post }: IProp) {\n  const dispatch = useDispatch();\n  const favorites = useSelector((st: CustomReduxState) => st.favorites);\n  const [favorited, setFavorited] = useState<boolean>(false);\n  const posts = useSelector((st: CustomReduxState) => st.posts);\n\n  //**FIXED**: Fix issue where the setFavorited doesn't change when a user clicks \"unfavorite\"\n  // on the same post, but different card. \n  // ex. User clicks the FavoriteButton to unfavorite their published post: `post id 1` from the `Favorites List`.\n  // The `post id 1` card in their published post list is still solid.\n\n  // If the post is found in the redux store's `favorites` state, \n  // set favorited to true.\n  useEffect(function handleFavoriteStatus() {\n    if (isFavorited(post.id, favorites)) {\n      setFavorited(true);\n    } else {\n      // POST-SUBMISSION UPDATE: Add an else statement to setFavorited to false.\n      setFavorited(false);\n    }\n    // POST-SUBMISSION UPDATE: Add `favorites` to the dependency array to rerender when favorites changes.\n  }, [favorites]);\n\n  /**\n   * Dispatches action creators depending on `type` input.\n   * (Only allows logged in users to invoke dispatch)\n   */\n  const handleFavorites = async (type: string) => {\n    if (!getCookie(\"token\")) {\n      alert(\"Must be signed in to favorite.\");\n    } else {\n      let currFavCount = parseInt(post.favorite_count);\n      switch (type) {\n        case \"ADD\":\n          setFavorited(true);\n          dispatch(addFavoriteToAPI(post));\n          // if the redux store's `posts` state is empty, \n          //    the component need to manually update the favCount to display.\n          if (posts.length === 0) {\n            post.favorite_count = (currFavCount + 1).toString();\n          }\n          break;\n        case \"DELETE\":\n          setFavorited(false);\n          dispatch(deleteFavoriteFromAPI(post.id));\n          if (posts.length === 0) {\n            post.favorite_count = (currFavCount - 1).toString();\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  return (\n    <div className=\"FavoriteButton d-flex align-items-center\">\n      { favorited ?\n        <FontAwesomeIcon className=\"FavoriteButton-btn\" icon={faHeart} size=\"1x\" onClick={() => handleFavorites(\"DELETE\")} />\n        :\n        <FontAwesomeIcon className=\"FavoriteButton-btn\" icon={farHeart} size=\"1x\" onClick={() => handleFavorites(\"ADD\")} />\n      }\n      <span>{post.favorite_count}</span>\n    </div>\n  );\n};\n\nexport default FavoriteButton;","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/UserList/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/CommentList/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/BlogList/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/FavoritesList/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/Forms/SignUpForm/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/Forms/LoginForm/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/Forms/BlogForm/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/SortSelection/index.tsx",["170"],"import React, { useEffect, useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Post } from \"../custom\";\n\ninterface IProp {\n  posts: Array<Post>,\n  handlePostSort: Function,\n  currentSort: string\n}\n\n/**\n * `SortSelection` renders a dropdown that enables a user to sort\n * posts by \"most recent\", \"most favorited\", and \"least favorited\".\n */\nfunction SortSelection({ posts, handlePostSort, currentSort }: IProp) {\n  const DEFAULT_SORT_SELECT = \"most recent\";\n  const [ sortType, setSortType ] = useState<string>(DEFAULT_SORT_SELECT);\n\n  // useEffect for ensuring the current sort type will be the recently selected sort type\n  // - ensures it stays the same sort type when a user causes a re-render of Homepage \n  //   (caused by the change in global state of posts from favoriting/unfavoriting)\n  useEffect(() => {\n    handleSelection(currentSort);\n  }, [posts]);\n\n  const handleSelection = (eventKey: string | null) => {\n    let sortedPosts;\n    switch (eventKey) {\n      case \"mostFavorite\":\n        setSortType(\"most favorited\");\n        sortedPosts = posts.slice().sort((a, b) => parseInt(b.favorite_count) - parseInt(a.favorite_count));\n        handlePostSort(sortedPosts, eventKey);\n        break;\n      case \"leastFavorite\":\n        setSortType(\"least favorited\");\n        sortedPosts = posts.slice().sort((a, b) => parseInt(a.favorite_count) - parseInt(b.favorite_count));\n        handlePostSort(sortedPosts, eventKey);\n        break;\n      case \"mostRecent\":\n        setSortType(DEFAULT_SORT_SELECT);\n        sortedPosts = posts.slice().sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n        handlePostSort(sortedPosts, eventKey);\n        break;\n      default:\n        setSortType(DEFAULT_SORT_SELECT);\n        handlePostSort(posts, eventKey);\n        break;\n    }\n  }\n\n  return (\n    <div className=\"SortSelection d-flex align-items-center\">\n      View by:\n      <Dropdown className=\"ml-2\">\n        <Dropdown.Toggle variant=\"primary\" id=\"filter-dropdown\">\n          {sortType}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item eventKey=\"mostRecent\" onSelect={handleSelection} >most recent</Dropdown.Item>\n          <Dropdown.Item eventKey=\"mostFavorite\" onSelect={handleSelection} >most favorited</Dropdown.Item>\n          <Dropdown.Item eventKey=\"leastFavorite\" onSelect={handleSelection} >least favorited</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default SortSelection;","/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/UserCard/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/Forms/CommentForm/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/CommentCard/index.tsx",["171","172"],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/BlogCard/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/CommentReplyAccord/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/PaymentPage/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/BlogPage/index.tsx",["173"],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/PaymentSuccessPage/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/RegisterStatusPage/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/PaymentCancelPage/index.tsx",[],"/Users/sugbit/Documents/blend-apprentice-project/bloggies_frontend/src/RoutedPages/UserSettingsPage/index.tsx",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":27,"column":6,"nodeType":"180","endLine":27,"endColumn":8,"suggestions":"181"},{"ruleId":"178","severity":1,"message":"182","line":56,"column":6,"nodeType":"180","endLine":56,"endColumn":14,"suggestions":"183"},{"ruleId":"178","severity":1,"message":"184","line":36,"column":6,"nodeType":"180","endLine":36,"endColumn":8,"suggestions":"185"},{"ruleId":"178","severity":1,"message":"186","line":78,"column":6,"nodeType":"180","endLine":78,"endColumn":14,"suggestions":"187"},{"ruleId":"178","severity":1,"message":"188","line":41,"column":6,"nodeType":"180","endLine":41,"endColumn":17,"suggestions":"189"},{"ruleId":"178","severity":1,"message":"190","line":24,"column":6,"nodeType":"180","endLine":24,"endColumn":13,"suggestions":"191"},{"ruleId":"178","severity":1,"message":"192","line":29,"column":6,"nodeType":"180","endLine":29,"endColumn":8,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":45,"column":9,"nodeType":"196","messageId":"197","endLine":45,"endColumn":26},{"ruleId":"178","severity":1,"message":"198","line":30,"column":6,"nodeType":"180","endLine":30,"endColumn":8,"suggestions":"199"},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["202"],"React Hook useEffect has a missing dependency: 'currUser.id'. Either include it or remove the dependency array.",["203"],"React Hook useEffect has missing dependencies: 'dispatch', 'isSearched', and 'searchTerm'. Either include them or remove the dependency array.",["204"],"React Hook useEffect has missing dependencies: 'currUser.id' and 'posts'. Either include them or remove the dependency array.",["205"],"React Hook useEffect has a missing dependency: 'post.id'. Either include it or remove the dependency array.",["206"],"React Hook useEffect has missing dependencies: 'currentSort' and 'handleSelection'. Either include them or remove the dependency array.",["207"],"React Hook useEffect has a missing dependency: 'comment.reply_count'. Either include it or remove the dependency array. If 'setReplyCount' needs the current value of 'comment.reply_count', you can also switch to useReducer instead of useState and read 'comment.reply_count' in the reducer.",["208"],"@typescript-eslint/no-unused-vars","'redirectToProfile' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'postsList'. Either include them or remove the dependency array.",["209"],"no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},"Update the dependencies array to be: [dispatch, userId]",{"range":"226","text":"227"},"Update the dependencies array to be: [currUser.id, userId]",{"range":"228","text":"229"},"Update the dependencies array to be: [dispatch, isSearched, searchTerm]",{"range":"230","text":"231"},"Update the dependencies array to be: [currUser.id, postId, posts]",{"range":"232","text":"233"},"Update the dependencies array to be: [favorites, post.id]",{"range":"234","text":"235"},"Update the dependencies array to be: [currentSort, handleSelection, posts]",{"range":"236","text":"237"},"Update the dependencies array to be: [comment.reply_count]",{"range":"238","text":"239"},"Update the dependencies array to be: [dispatch, postsList]",{"range":"240","text":"241"},[1022,1024],"[dispatch, userId]",[2163,2171],"[currUser.id, userId]",[1498,1500],"[dispatch, isSearched, searchTerm]",[3315,3323],"[currUser.id, postId, posts]",[1862,1873],"[favorites, post.id]",[879,886],"[currentSort, handleSelection, posts]",[1112,1114],"[comment.reply_count]",[1405,1407],"[dispatch, postsList]"]